@page "/dogsearch"
@using PawfectMatch.Components.Pages.Models
@using PawfectMatch.Components.Services
@inject NavigationManager Navigation
@using Microsoft.AspNetCore.Components
@inject DogService DogService
@rendermode InteractiveServer

<PageTitle>Dog Search</PageTitle>

<h1>Dogs Available for Adoption</h1>

<!-- Dropdown for Breed Filter -->
<div>
    <label for="breedFilter">Filter by Breed:</label>
    <select id="breedFilter" @onchange="FilterDogs">
        <option value="">All Breeds</option>
        @foreach (var breed in breeds)
        {
            <option value="@breed">@breed</option>
        }
    </select>
</div>

<!-- Dogs List -->
<ul>
    @foreach (var dog in filteredDogs)
    {
        if (dog.IsAvailable)
        {
            <li>
                <img src="images/@dog.ImageUrl" alt="@dog.Name" style="height:200px;" />
                <p>Name: @dog.Name</p>
                <p>Breed: @dog.Breed</p>
                <p>Age: @dog.Age</p>
                <p>Size in pounds: @dog.Size</p>
                <button @onclick="() => NavigateToDetails(dog.Id)" style="margin-bottom:20px">View Dog</button>
            </li>
        }
    }
</ul>

@code {
    private List<Dog> dogs;
    private List<Dog> filteredDogs;
    private List<string> breeds;
    private string selectedBreed = "";

    protected override async Task OnInitializedAsync()
    {
        dogs = await DogService.GetDogsAsync();
        filteredDogs = dogs;
        breeds = dogs.Select(d => d.Breed).Distinct().ToList();
    }

    private void FilterDogs(ChangeEventArgs e)
    {
        selectedBreed = e.Value.ToString();
        if (string.IsNullOrEmpty(selectedBreed))
        {
            filteredDogs = dogs;
        }
        else
        {
            filteredDogs = dogs.Where(d => d.Breed == selectedBreed).ToList();
        }
    }

    private void NavigateToDetails(int id)
    {
        Navigation.NavigateTo($"/dogdetails/{id}");
    }
}
