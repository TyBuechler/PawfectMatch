@layout LoginLayout
@using PawfectMatch.Components.Layout
@using PawfectMatch.Components.Pages.Models
@using PawfectMatch.Data
@using Microsoft.EntityFrameworkCore
@inject PawfectMatchContext DbContext
@inject NavigationManager Navigation
@page "/Login"
@rendermode InteractiveServer

<div class="login-container">
    <h3 class="login-text">Login</h3>

    @if (!string.IsNullOrEmpty(LoginMessage))
    {
        <div class="alert">@LoginMessage</div>
    }

    <form class="login-form">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" @bind="Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" @bind="Password" class="form-control" />
        </div>

        <button type="button" @onclick="LoginUser" class="btn btn-primary">Login</button>
    </form>

    <p class="signup-text-sub">
        Don't have an account? <a href="/signup">Sign up here</a>.<br />
    </p>
</div>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private string LoginMessage = string.Empty;

    // Login method
    private async Task LoginUser()
    {
        // Retrieve the user from the database based on the username
        var user = await DbContext.Users.FirstOrDefaultAsync(u => u.username == Username);

        if (user != null)
        {
            if (user.password == Password)
            {
              

                // Redirect the user to the home page or wherever appropriate
                Navigation.NavigateTo("/");
            }
            else
            {
                LoginMessage = "Invalid username or password.";
            }
        }
        else
        {
            // User not found
            LoginMessage = "Invalid username or password.";
        }
    }
}