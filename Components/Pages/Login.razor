@layout LoginLayout
@using PawfectMatch;
@using PawfectMatch.Components.Layout
@using PawfectMatch.Components.Pages.Models
@using PawfectMatch.Data
@using System.Security.Claims;
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@inject PawfectMatchContext DbContext
@inject NavigationManager Navigation


@page "/"
@rendermode InteractiveServer

<div class="login-container">
    <h3 class="login-text">Login</h3>
    <form class="login-form">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" @bind="Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" @bind="Password" class="form-control" />
        </div>

        <button type="button" @onclick="LoginUser" class="btn btn-primary">Login</button>
    </form>

    @if (!string.IsNullOrEmpty(LoginMessage))
    {
        <p class="error-message">@LoginMessage</p>
    }

    <p class="signup-text-sub">
        Don't have an account? <a href="/signup">Sign up here</a>.
    </p>
</div>

@code {
    private string Username { get; set; } = string.Empty;
    private string Password { get; set; } = string.Empty;
    private string LoginMessage { get; set; } = string.Empty;

    private async Task LoginUser()
    {
        var user = await DbContext.Users.FirstOrDefaultAsync(u => u.username == Username);

        if (user.username == "Admin1" || user.password == "Admin1")
        {
            Navigation.NavigateTo("/Admin");
        }
        else if (user.password == Password)
        {
            Navigation.NavigateTo("/home");
        }
        else
        {
            LoginMessage = "Invalid username or password.";
        }

    }
}
