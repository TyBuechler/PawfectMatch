@layout LoginLayout
@using PawfectMatch.Components.Layout
@using PawfectMatch.Components.Pages.Models
@using Microsoft.EntityFrameworkCore
@using System.Net.Http.Json
@inject HttpClient Http
@inject NavigationManager Navigation
@inject AuthenticationService AuthenticationService

@page "/Login"
@rendermode InteractiveServer

<div class="login-container">
    <h3 class="login-text">Login</h3>

    @if (!string.IsNullOrEmpty(LoginMessage))
    {
        <div class="alert">@LoginMessage</div>
    }

    <form class="login-form">
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" @bind="Username" class="form-control" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" @bind="Password" class="form-control" />
        </div>

        <button type="button" @onclick="LoginUser" class="btn btn-primary">Login</button>
    </form>

    <p class="signup-text-sub">
        Don't have an account? <a href="/signup">Sign up here</a>.<br />
    </p>
</div>

@code {
    private string Username = string.Empty;
    private string Password = string.Empty;
    private string LoginMessage = string.Empty;

    // Login method
    private async Task LoginUser()
    {
        // Prepare the login request
        var loginModel = new { Username, Password };

        try
        {
            // Send the login request to the backend API to authenticate the user
            var response = await Http.PostAsJsonAsync("api/auth/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var token = await response.Content.ReadAsStringAsync();
                await AuthenticationService.StoreToken(token);
                Navigation.NavigateTo("/");
            }
            else
            {
                var errorMessage = await response.Content.ReadAsStringAsync();
                LoginMessage = $"Error: {response.StatusCode} - {errorMessage}";
            }

        }
        catch (Exception ex)
        {
            // Handle any errors that may occur during the API request
            LoginMessage = "An error occurred during login: " + ex.Message;
        }
    }
}
