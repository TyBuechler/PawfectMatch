@layout LoginLayout
@using PawfectMatch.Components.Layout
@page "/signup"
@inject NavigationManager Navigation
@rendermode InteractiveServer

<div class="signup-container">
    <h3 class="signup-text">Sign Up</h3>

    <div class="form-group">
        <label for="username">Username</label>
        <input @bind="NewUsername" id="username" class="form-control" />
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input @bind="NewPassword" id="password" type="password" class="form-control" />
    </div>
    <div class="form-group">
        <label for="confirmPassword">Confirm Password</label>
        <input @bind="confirmPassword" id="confirmPassword" type="password" class="form-control" />
    </div>
    <button class="btn btn-primary" @onclick="SignupUser">Sign Up</button>
    <p class="signup-message">@SignUpMessage</p>

    <p class="login-link">
        Already have an account? <a href="/Login">Login</a>
    </p>
</div>

@code {
    private string NewUsername = string.Empty;
    private string NewPassword = string.Empty;
    private string confirmPassword = string.Empty;
    private string SignUpMessage = string.Empty;

    private Dictionary<string, string> Users = new Dictionary<string, string>
    {
        {"admin", "admin"}
    };

    private async Task SignupUser()
    {
        // Check if the username is already taken
        if (Users.ContainsKey(NewUsername))
        {
            SignUpMessage = "Username and password cannot be empty.";
            return;
        }

        if (NewPassword != confirmPassword)
        {
            SignUpMessage = "Passwords do not match.";
            return;
        }

        // Add the new user
        Users[NewUsername] = NewPassword;
        SignUpMessage = "Sign-up successful! You can now log in.";
    }
}
